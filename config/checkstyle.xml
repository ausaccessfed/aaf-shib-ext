<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!-- This is a checkstyle configuration file. For descriptions of
what the following rules do, please see the checkstyle configuration
page at http://checkstyle.sourceforge.net/config.html -->

<module name="Checker">

  <module name="SuppressionFilter">
    <property name="file" value="config/suppressions.xml"/>
  </module>

  <module name="FileTabCharacter">
  </module>

  <module name="NewlineAtEndOfFile">
    <property name="lineSeparator" value="lf"/>
  </module>

  <module name="TreeWalker">
    <module name="RedundantImport">
      <property name="severity" value="error"/>
    </module>

    <module name="JavadocMethod">
      <property name="scope" value="protected"/>
      <property name="severity" value="warning"/>
      <property name="allowMissingParamTags" value="true"/>
      <property name="allowMissingReturnTag" value="true"/>
      <property name="allowMissingThrowsTags" value="true"/>
      <property name="allowThrowsTagsForSubclasses" value="true"/>
      <property name="allowUndeclaredRTE" value="true"/>
    </module>

    <module name="JavadocType">
      <property name="scope" value="protected"/>
      <property name="severity" value="error"/>
    </module>

    <module name="JavadocStyle">
      <property name="severity" value="warning"/>
    </module>

    <module name="LineLength">
      <property name="max"
                value="${com.puppycrawl.tools.checkstyle.checks.sizes.LineLength.max}"
                default="120"/>
      <property name="severity" value="error"/>

      <property name="ignorePattern"
                value="${com.puppycrawl.tools.checkstyle.checks.sizes.LineLength.ignorePattern}"
                default="^(package .*;\s*)|(import .*;\s*)|( *(\*|//).*https?://.*)$"/>
    </module>

    <module name="LeftCurly">
      <property name="severity" value="warning"/>
    </module>

    <module name="RightCurly">
      <property name="option" value="same"/>
      <property name="severity" value="warning"/>
    </module>

    <module name="NeedBraces">
      <property name="severity" value="warning"/>
      <property name="tokens"
                value="LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO"/>
    </module>

    <!-- Checks that long constants are defined with an upper ell.-->
    <module name="UpperEll">
      <property name="severity" value="error"/>
    </module>

    <!-- Warn about falling through to the next case statement.  Similar to
    javac -Xlint:fallthrough, but the check is suppressed if a single-line comment
    on the last non-blank line preceding the fallen-into case contains 'fall through' (or
    some other variants which we don't publicized to promote consistency).
    -->
    <module name="FallThrough">
      <property name="reliefPattern"
                value="fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on"/>
      <property name="severity" value="error"/>
    </module>

    <!-- Checks that various tokens are surrounded by whitespace.
         This includes most binary operators and keywords followed
         by regular or curly braces.
    -->
    <module name="WhitespaceAround">
      <property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR,
        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,
        EQUAL, GE, GT, LAND, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,
        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,
        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,
        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,
        SL, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN"/>
      <property name="severity" value="error"/>
    </module>

    <!-- Checks that commas, semicolons and typecasts are followed by
         whitespace.
    -->
    <module name="WhitespaceAfter">
      <property name="tokens" value="COMMA, SEMI, TYPECAST"/>
    </module>

    <!-- Checks that there is no whitespace after various unary operators.
         Linebreaks are allowed.
    -->
    <module name="NoWhitespaceAfter">
      <property name="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,
        UNARY_PLUS"/>
      <property name="allowLineBreaks" value="true"/>
      <property name="severity" value="error"/>
    </module>

    <!-- Checks that there is no whitespace before various unary operators.
         Linebreaks are allowed.
    -->
    <module name="NoWhitespaceBefore">
      <property name="tokens" value="SEMI, DOT, POST_DEC, POST_INC"/>
      <property name="allowLineBreaks" value="true"/>
      <property name="severity" value="error"/>
    </module>

    <!-- Checks that there is no whitespace before close parens or after
         open parens.
    -->
    <module name="ParenPad">
      <property name="severity" value="warning"/>
    </module>

    <module name="EmptyLineSeparator">
      <property name="allowNoEmptyLineBetweenFields" value="true"/>
      <property name="allowMultipleEmptyLines" value="false"/>
      <property name="severity" value="warning"/>
    </module>

  </module>
</module>
