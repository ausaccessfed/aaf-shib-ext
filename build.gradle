plugins {
    id 'net.saliman.cobertura' version '2.2.7'
}

apply plugin: 'java'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'checkstyle'
apply plugin: 'cobertura'

def shibboleth_idp_version = '3.1.1'

group = 'au.edu.aaf'
version = '1.0.0'
sourceCompatibility = 1.8

repositories {
    jcenter()
    maven {
        url 'https://build.shibboleth.net/nexus/content/repositories/releases/'
    }
}

dependencies {
    compile 'net.shibboleth.idp:idp-attribute-api:' + shibboleth_idp_version
    compile 'net.shibboleth.idp:idp-attribute-resolver-api:' + shibboleth_idp_version
    compile 'net.shibboleth.idp:idp-attribute-resolver-impl:' + shibboleth_idp_version
    compile 'net.shibboleth.idp:idp-attribute-resolver-spring:' + shibboleth_idp_version
    // + logging framework when the right fit has been found +

    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:2.0.5-beta"
}

findbugs {
    ignoreFailures = false
    effort = "max"
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

pmd {
    ruleSets = [
            'java-basic',
            'java-codesize',
            'java-empty',
            'java-javabeans',
            'java-strictexception',
            'java-strings',
            'java-typeresolution',
            'java-unnecessary',
            'java-unusedcode'
    ]
    ignoreFailures = false
    sourceSets = [sourceSets.main, sourceSets.test]
}

checkstyle {
    toolVersion = '6.7'
    configFile = new File(rootDir, "config/checkstyle.xml")
    ignoreFailures = false
    sourceSets = [sourceSets.main, sourceSets.test]
}

task checkstyleHtml << {
    ant.xslt(in: checkstyleMain.reports.xml.destination,
            style: file('config/checkstyle-noframes-sorted.xsl'),
            out: new File(checkstyleMain.reports.xml.destination.parent, 'main.html'))
}

checkstyleMain.finalizedBy checkstyleHtml

